{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NikolasZR\\\\Desktop\\\\PROGRAMACION CURSO\\\\FT-M2\\\\09-React-Routing\\\\homework\\\\src\\\\containers\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\nimport { Route } from 'react-router-dom';\nimport About from '../components/About';\nimport City from '../components/City';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\nfunction App() {\n  _s();\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: '/',\n      render: () => /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: '/',\n      render: () => /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: '/about',\n      render: () => /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: '/city/:cityId',\n      render: _ref => {\n        let {\n          match\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(City, {\n          cityId: onFilter(match.params.citi)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 58\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Nav","Cards","Route","About","City","apiKey","App","cities","setCities","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","alert","onFilter","ciudadId","parseInt","length","match","params","citi"],"sources":["C:/Users/NikolasZR/Desktop/PROGRAMACION CURSO/FT-M2/09-React-Routing/homework/src/containers/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Nav from '../components/Nav.jsx';\r\nimport Cards from '../components/Cards.jsx';\r\nimport { Route } from 'react-router-dom';\r\nimport About from '../components/About';\r\nimport City from '../components/City'\r\n\r\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState([]);\r\n  function onClose(id) {\r\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\r\n  }\r\n  function onSearch(ciudad) {\r\n    //Llamado a la API del clima\r\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\r\n      .then(r => r.json())\r\n      .then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n          setCities(oldCities => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n  }\r\n  function onFilter(ciudadId) {\r\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\r\n    if(ciudad.length > 0) {\r\n        return ciudad[0];\r\n    } else {\r\n        return null;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Nav onSearch={onSearch}/>\r\n      <div>\r\n        <Cards\r\n          cities={cities}\r\n          onClose={onClose}\r\n        />\r\n      </div>\r\n      <hr /> */}\r\n      <Route path={'/'} render={()=> <Nav onSearch={onSearch}/>}/>\r\n      <Route exact path={'/'} render={() => <Cards cities={cities} onClose={onClose}/>}/>\r\n      <Route exact path={'/about'} render={() => <About />} />\r\n      <Route path={'/city/:cityId'} render={({match}) => <City cityId={onFilter(match.params.citi)}/>}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}